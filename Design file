`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 09/16/2025 09:54:23 PM
// Design Name: 
// Module Name: Mouse_basys
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////



module Mouse_basys(
    input  wire clk_100Mhz,   
    input  wire mouse_clk,
    input  wire mouse_data,
    output reg  LED     
);
    reg [3:0]  frame_bit = 0;     
    reg [7:0]  byte_data = 8'h00; 
    reg        byte_ready = 1'b0; 

    always @(negedge mouse_clk) begin
        byte_ready <= 1'b0;  

        case (frame_bit)
            4'd0: begin
                // wait for START = 0
                if (mouse_data == 1'b0)
                    frame_bit <= 4'd1;
                else
                    frame_bit <= 4'd0; 
            end

            4'd1,4'd2,4'd3,4'd4,4'd5,4'd6,4'd7,4'd8: begin
                byte_data <= {mouse_data, byte_data[7:1]};
                frame_bit <= frame_bit + 1'b1;

                if (frame_bit == 4'd8) begin
                    byte_ready <= 1'b1; 
                end
            end

            4'd9:  frame_bit <= 4'd10; 
            4'd10: frame_bit <= 4'd0;  
            default: frame_bit <= 4'd0;
        endcase

        if (byte_ready)
            LED = 1;
        else
            LED = 0;
    end
endmodule



